type complex = { re: float; im: float }
node complex_add(i1 : complex; i2 : complex) returns (o : complex)
var d : float; c : float; b : float; a : float; v : float; v_1 : float;
let
  o = { re = v; im = v_1 };
  v_1 = (b +. d);
  v = (a +. c);
  d = i2.im;
  c = i2.re;
  b = i1.im;
  a = i1.re
tel

node complex_sub(i1 : complex; i2 : complex) returns (o : complex)
var d : float; c : float; b : float; a : float; v : float; v_2 : float;
let
  o = { re = v; im = v_2 };
  v_2 = (b -. d);
  v = (a -. c);
  d = i2.im;
  c = i2.re;
  b = i1.im;
  a = i1.re
tel

node complex_mul(i1 : complex; i2 : complex) returns (o : complex)
var d : float; c : float; b : float; a : float; v : float; v_3 : float;
    v_4 : float; v_5 : float; v_6 : float; v_7 : float;
let
  o = { re = v_4; im = v_7 };
  v_7 = (v_5 +. v_6);
  v_6 = (b *. c);
  v_5 = (a *. d);
  v_4 = (v -. v_3);
  v_3 = (b *. d);
  v = (a *. c);
  d = i2.im;
  c = i2.re;
  b = i1.im;
  a = i1.re
tel

