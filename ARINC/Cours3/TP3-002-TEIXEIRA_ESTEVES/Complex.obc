-- Code generated by the MiniLucid Compiler
type complex = {re: float;
                im: float}
machine complex_add =
  step(i1: complex, i2: complex) returns (o: complex) {
    var v_1: float; v: float; a: float; b: float; c: float; d: float;
    d = i2.im;
    c = i2.re;
    b = i1.im;
    a = i1.re;
    v_1 = ((+.) b d);
    v = ((+.) a c);
    o = {re = v;
         im = v_1}
  }

machine complex_sub =
  step(i1: complex, i2: complex) returns (o: complex) {
    var v_2: float; v: float; a: float; b: float; c: float; d: float;
    d = i2.im;
    c = i2.re;
    b = i1.im;
    a = i1.re;
    v_2 = ((-.) b d);
    v = ((-.) a c);
    o = {re = v;
         im = v_2}
  }

machine complex_mul =
  step(i1: complex, i2: complex) returns (o: complex) {
    var v_7: float; v_6: float; v_5: float; v_4: float; v_3: float; v: float;
        a: float; b: float; c: float; d: float;
    d = i2.im;
    c = i2.re;
    b = i1.im;
    a = i1.re;
    v_6 = ((*.) b c);
    v_5 = ((*.) a d);
    v_7 = ((+.) v_5 v_6);
    v_3 = ((*.) b d);
    v = ((*.) a c);
    v_4 = ((-.) v v_3);
    o = {re = v_4;
         im = v_7}
  }


