-- Code generated by the MiniLucid Compiler
open Complex
open Complex_io
open Complex_vec_io
machine vect_add<<n:int>> =
  obj n_1 : Complex.complex_add[n];
  
  step(v1: Complex.complex^n, v2: Complex.complex^n)
  returns (c: Complex.complex^n) {
    for i: int = 0 to n {
       (c[i]) = n_1[i].step(v1[i], v2[i]) 
    }
  }

machine sum_of_all<<n:int>> =
  obj n_3 : Complex.complex_add[n];
  
  step(v: Complex.complex^n) returns (n_2: Complex.complex) {
    var tmp: Complex.complex;
    tmp = { Complex.re = 0.000000; Complex.im = 0.000000 };
    n_2 = tmp;
    for i: int = 0 to n {
       (n_2) = n_3[i].step(v[i], n_2) 
    }
  }


